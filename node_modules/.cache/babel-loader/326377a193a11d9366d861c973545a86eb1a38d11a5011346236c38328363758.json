{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Motta\\\\cardboard\\\\src\\\\components\\\\dashboard\\\\ProgressBox.tsx\";\nimport React from 'react';\nimport { Box, Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ProgressBox = ({\n  label,\n  value,\n  total,\n  backgroundColor\n}) => {\n  const percentage = value / total * 100;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      backgroundColor,\n      padding: 2,\n      borderRadius: 1\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body2\",\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        width: '100%',\n        backgroundColor: 'rgba(255,255,255,0.3)',\n        borderRadius: 1,\n        mt: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          width: `${percentage}%`,\n          backgroundColor: 'rgba(255,255,255,0.7)',\n          height: 8,\n          borderRadius: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_c = ProgressBox;\nvar _c;\n$RefreshReg$(_c, \"ProgressBox\");","map":{"version":3,"names":["React","Box","Typography","jsxDEV","_jsxDEV","ProgressBox","label","value","total","backgroundColor","percentage","sx","padding","borderRadius","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","width","mt","height","_c","$RefreshReg$"],"sources":["C:/Users/Motta/cardboard/src/components/dashboard/ProgressBox.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Box, Typography } from '@mui/material';\r\n\r\ninterface ProgressBoxProps {\r\n  label: string;\r\n  value: number;\r\n  total: number;\r\n  backgroundColor?: string;\r\n}\r\n\r\nexport const ProgressBox: React.FC<ProgressBoxProps> = ({ label, value, total, backgroundColor }) => {\r\n  const percentage = (value / total) * 100;\r\n\r\n  return (\r\n    <Box sx={{ backgroundColor, padding: 2, borderRadius: 1 }}>\r\n      <Typography variant=\"h4\">{value}</Typography>\r\n      <Typography variant=\"body2\">{label}</Typography>\r\n      <Box sx={{ width: '100%', backgroundColor: 'rgba(255,255,255,0.3)', borderRadius: 1, mt: 1 }}>\r\n        <Box\r\n          sx={{\r\n            width: `${percentage}%`,\r\n            backgroundColor: 'rgba(255,255,255,0.7)',\r\n            height: 8,\r\n            borderRadius: 1,\r\n          }}\r\n        />\r\n      </Box>\r\n    </Box>\r\n  );\r\n};"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,EAAEC,UAAU,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAShD,OAAO,MAAMC,WAAuC,GAAGA,CAAC;EAAEC,KAAK;EAAEC,KAAK;EAAEC,KAAK;EAAEC;AAAgB,CAAC,KAAK;EACnG,MAAMC,UAAU,GAAIH,KAAK,GAAGC,KAAK,GAAI,GAAG;EAExC,oBACEJ,OAAA,CAACH,GAAG;IAACU,EAAE,EAAE;MAAEF,eAAe;MAAEG,OAAO,EAAE,CAAC;MAAEC,YAAY,EAAE;IAAE,CAAE;IAAAC,QAAA,gBACxDV,OAAA,CAACF,UAAU;MAACa,OAAO,EAAC,IAAI;MAAAD,QAAA,EAAEP;IAAK;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CAAC,eAC7Cf,OAAA,CAACF,UAAU;MAACa,OAAO,EAAC,OAAO;MAAAD,QAAA,EAAER;IAAK;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CAAC,eAChDf,OAAA,CAACH,GAAG;MAACU,EAAE,EAAE;QAAES,KAAK,EAAE,MAAM;QAAEX,eAAe,EAAE,uBAAuB;QAAEI,YAAY,EAAE,CAAC;QAAEQ,EAAE,EAAE;MAAE,CAAE;MAAAP,QAAA,eAC3FV,OAAA,CAACH,GAAG;QACFU,EAAE,EAAE;UACFS,KAAK,EAAE,GAAGV,UAAU,GAAG;UACvBD,eAAe,EAAE,uBAAuB;UACxCa,MAAM,EAAE,CAAC;UACTT,YAAY,EAAE;QAChB;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACI,EAAA,GAnBWlB,WAAuC;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}