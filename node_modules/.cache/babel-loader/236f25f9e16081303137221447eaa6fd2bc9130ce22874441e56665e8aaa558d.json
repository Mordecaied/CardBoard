{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Motta\\\\cardboard\\\\src\\\\components\\\\datamanagement\\\\GanttChart.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useMemo } from 'react';\nimport { Typography, Paper, Box, Grid, Collapse } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GanttChart = ({\n  tasks\n}) => {\n  _s();\n  const [expandedCategory, setExpandedCategory] = useState(null);\n  const {\n    startDate,\n    endDate,\n    monthsAndWeeks\n  } = useMemo(() => {\n    const start = new Date(Math.min(...Object.values(tasks).map(t => new Date(t.startDate).getTime())));\n    const end = new Date(Math.max(...Object.values(tasks).map(t => new Date(t.endDate).getTime())));\n    return {\n      startDate: start,\n      endDate: end,\n      monthsAndWeeks: getMonthsAndWeeks(start, end)\n    };\n  }, [tasks]);\n  const getColor = category => {\n    const colors = ['#FF6B6B', '#4ECDC4', '#45B7D1', '#FFA07A', '#98D8C8'];\n    return colors[Object.keys(tasks).indexOf(category) % colors.length];\n  };\n  const handlePillClick = category => {\n    setExpandedCategory(prevCategory => prevCategory === category ? null : category);\n  };\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 3,\n    style: {\n      padding: '20px',\n      marginTop: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: \"Timeline Summary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      position: \"relative\",\n      mt: 4,\n      mb: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 2,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            children: \"Categories\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 10,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            children: monthsAndWeeks.map(({\n              month,\n              weeks\n            }) => /*#__PURE__*/_jsxDEV(Box, {\n              flexGrow: 1,\n              textAlign: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                children: month\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                display: \"flex\",\n                children: weeks.map((week, index) => /*#__PURE__*/_jsxDEV(Box, {\n                  flexGrow: 1,\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"caption\",\n                    children: week\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 47,\n                    columnNumber: 25\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 46,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 19\n              }, this)]\n            }, month, true, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        position: \"absolute\",\n        top: 24,\n        bottom: 0,\n        left: \"16.67%\",\n        right: 0,\n        children: monthsAndWeeks.flatMap(({\n          weeks\n        }) => weeks.map((_, index) => /*#__PURE__*/_jsxDEV(Box, {\n          position: \"absolute\",\n          left: `${index / weeks.length * 100}%`,\n          width: \"1px\",\n          height: \"100%\",\n          bgcolor: \"#ddd\"\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this)))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mt: 2,\n        children: Object.entries(tasks).map(([category, data]) => /*#__PURE__*/_jsxDEV(Box, {\n          mb: 2,\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            alignItems: \"center\",\n            height: 30,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              style: {\n                width: '16.67%',\n                paddingRight: '8px'\n              },\n              noWrap: true,\n              children: category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              flexGrow: 1,\n              height: \"100%\",\n              position: \"relative\",\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                position: \"absolute\",\n                left: `${getLeftPosition(startDate, new Date(data.startDate), endDate)}%`,\n                width: `${getWidth(new Date(data.startDate), new Date(data.endDate), startDate, endDate)}%`,\n                height: \"100%\",\n                bgcolor: getColor(category),\n                borderRadius: 15,\n                onClick: () => handlePillClick(category),\n                style: {\n                  cursor: 'pointer'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n            in: expandedCategory === category,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              ml: \"16.67%\",\n              mt: 1,\n              p: 2,\n              bgcolor: \"#f5f5f5\",\n              borderRadius: 1,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                children: [\"Start Date: \", data.startDate]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                children: [\"End Date: \", data.endDate]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                children: [\"Total Tasks: \", data.total]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                children: [\"Completed Tasks: \", data.completed]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                children: [\"Working Days: \", data.workingDays]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this)]\n        }, category, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(GanttChart, \"U0qgPgSrFmvS7ebj8ve6OBqElJE=\");\n_c = GanttChart;\nfunction getMonthsAndWeeks(startDate, endDate) {\n  const result = [];\n  let currentDate = new Date(startDate);\n  while (currentDate <= endDate) {\n    const month = currentDate.toLocaleString('default', {\n      month: 'short'\n    });\n    const weeks = getWeeksInMonth(currentDate, endDate);\n    result.push({\n      month,\n      weeks\n    });\n    currentDate.setMonth(currentDate.getMonth() + 1);\n  }\n  return result;\n}\nfunction getWeeksInMonth(date, endDate) {\n  const weeks = [];\n  const firstDay = new Date(date.getFullYear(), date.getMonth(), 1);\n  const lastDay = new Date(date.getFullYear(), date.getMonth() + 1, 0);\n  let currentWeek = 1;\n  for (let d = firstDay; d <= lastDay && d <= endDate; d.setDate(d.getDate() + 1)) {\n    if (d.getDay() === 1 || d.getDate() === 1) {\n      weeks.push(`W${currentWeek}`);\n      currentWeek++;\n    }\n  }\n  return weeks;\n}\nfunction getLeftPosition(startDate, itemStartDate, endDate) {\n  const totalDays = (endDate.getTime() - startDate.getTime()) / (1000 * 3600 * 24);\n  const daysFromStart = (itemStartDate.getTime() - startDate.getTime()) / (1000 * 3600 * 24);\n  return daysFromStart / totalDays * 100;\n}\nfunction getWidth(itemStartDate, itemEndDate, startDate, endDate) {\n  const totalDays = (endDate.getTime() - startDate.getTime()) / (1000 * 3600 * 24);\n  const itemDays = (itemEndDate.getTime() - itemStartDate.getTime()) / (1000 * 3600 * 24);\n  return itemDays / totalDays * 100;\n}\nexport default GanttChart;\nvar _c;\n$RefreshReg$(_c, \"GanttChart\");","map":{"version":3,"names":["React","useState","useMemo","Typography","Paper","Box","Grid","Collapse","jsxDEV","_jsxDEV","GanttChart","tasks","_s","expandedCategory","setExpandedCategory","startDate","endDate","monthsAndWeeks","start","Date","Math","min","Object","values","map","t","getTime","end","max","getMonthsAndWeeks","getColor","category","colors","keys","indexOf","length","handlePillClick","prevCategory","elevation","style","padding","marginTop","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","position","mt","mb","container","item","xs","display","month","weeks","flexGrow","textAlign","week","index","top","bottom","left","right","flatMap","_","width","height","bgcolor","entries","data","alignItems","paddingRight","noWrap","getLeftPosition","getWidth","borderRadius","onClick","cursor","in","ml","p","total","completed","workingDays","_c","result","currentDate","toLocaleString","getWeeksInMonth","push","setMonth","getMonth","date","firstDay","getFullYear","lastDay","currentWeek","d","setDate","getDate","getDay","itemStartDate","totalDays","daysFromStart","itemEndDate","itemDays","$RefreshReg$"],"sources":["C:/Users/Motta/cardboard/src/components/datamanagement/GanttChart.tsx"],"sourcesContent":["import React, { useState, useMemo } from 'react';\r\nimport { Typography, Paper, Box, Grid, Collapse } from '@mui/material';\r\nimport { TaskData } from '../../pages/DataManagementView';\r\n\r\ninterface GanttChartProps {\r\n  tasks: Record<string, TaskData>;\r\n}\r\n\r\nconst GanttChart: React.FC<GanttChartProps> = ({ tasks }) => {\r\n  const [expandedCategory, setExpandedCategory] = useState<string | null>(null);\r\n\r\n  const { startDate, endDate, monthsAndWeeks } = useMemo(() => {\r\n    const start = new Date(Math.min(...Object.values(tasks).map(t => new Date(t.startDate).getTime())));\r\n    const end = new Date(Math.max(...Object.values(tasks).map(t => new Date(t.endDate).getTime())));\r\n    return {\r\n      startDate: start,\r\n      endDate: end,\r\n      monthsAndWeeks: getMonthsAndWeeks(start, end)\r\n    };\r\n  }, [tasks]);\r\n\r\n  const getColor = (category: string) => {\r\n    const colors = ['#FF6B6B', '#4ECDC4', '#45B7D1', '#FFA07A', '#98D8C8'];\r\n    return colors[Object.keys(tasks).indexOf(category) % colors.length];\r\n  };\r\n\r\n  const handlePillClick = (category: string) => {\r\n    setExpandedCategory(prevCategory => prevCategory === category ? null : category);\r\n  };\r\n\r\n  return (\r\n    <Paper elevation={3} style={{ padding: '20px', marginTop: '20px' }}>\r\n      <Typography variant=\"h6\" gutterBottom>Timeline Summary</Typography>\r\n      <Box position=\"relative\" mt={4} mb={2}>\r\n        <Grid container>\r\n          <Grid item xs={2}>\r\n            <Typography variant=\"subtitle2\">Categories</Typography>\r\n          </Grid>\r\n          <Grid item xs={10}>\r\n            <Box display=\"flex\">\r\n              {monthsAndWeeks.map(({ month, weeks }) => (\r\n                <Box key={month} flexGrow={1} textAlign=\"center\">\r\n                  <Typography variant=\"subtitle2\">{month}</Typography>\r\n                  <Box display=\"flex\">\r\n                    {weeks.map((week, index) => (\r\n                      <Box key={index} flexGrow={1}>\r\n                        <Typography variant=\"caption\">{week}</Typography>\r\n                      </Box>\r\n                    ))}\r\n                  </Box>\r\n                </Box>\r\n              ))}\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n        \r\n        {/* Faint gridlines */}\r\n        <Box position=\"absolute\" top={24} bottom={0} left=\"16.67%\" right={0}>\r\n          {monthsAndWeeks.flatMap(({ weeks }) => \r\n            weeks.map((_, index) => (\r\n              <Box \r\n                key={index} \r\n                position=\"absolute\" \r\n                left={`${(index / weeks.length) * 100}%`} \r\n                width=\"1px\" \r\n                height=\"100%\" \r\n                bgcolor=\"#ddd\"\r\n              />\r\n            ))\r\n          )}\r\n        </Box>\r\n\r\n        {/* Task bars */}\r\n        <Box mt={2}>\r\n          {Object.entries(tasks).map(([category, data]) => (\r\n            <Box key={category} mb={2}>\r\n              <Box display=\"flex\" alignItems=\"center\" height={30}>\r\n                <Typography variant=\"body2\" style={{ width: '16.67%', paddingRight: '8px' }} noWrap>\r\n                  {category}\r\n                </Typography>\r\n                <Box flexGrow={1} height=\"100%\" position=\"relative\">\r\n                  <Box\r\n                    position=\"absolute\"\r\n                    left={`${getLeftPosition(startDate, new Date(data.startDate), endDate)}%`}\r\n                    width={`${getWidth(new Date(data.startDate), new Date(data.endDate), startDate, endDate)}%`}\r\n                    height=\"100%\"\r\n                    bgcolor={getColor(category)}\r\n                    borderRadius={15}\r\n                    onClick={() => handlePillClick(category)}\r\n                    style={{ cursor: 'pointer' }}\r\n                  />\r\n                </Box>\r\n              </Box>\r\n              <Collapse in={expandedCategory === category}>\r\n                <Box ml=\"16.67%\" mt={1} p={2} bgcolor=\"#f5f5f5\" borderRadius={1}>\r\n                  <Typography variant=\"body2\">Start Date: {data.startDate}</Typography>\r\n                  <Typography variant=\"body2\">End Date: {data.endDate}</Typography>\r\n                  <Typography variant=\"body2\">Total Tasks: {data.total}</Typography>\r\n                  <Typography variant=\"body2\">Completed Tasks: {data.completed}</Typography>\r\n                  <Typography variant=\"body2\">Working Days: {data.workingDays}</Typography>\r\n                </Box>\r\n              </Collapse>\r\n            </Box>\r\n          ))}\r\n        </Box>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nfunction getMonthsAndWeeks(startDate: Date, endDate: Date) {\r\n  const result = [];\r\n  let currentDate = new Date(startDate);\r\n  while (currentDate <= endDate) {\r\n    const month = currentDate.toLocaleString('default', { month: 'short' });\r\n    const weeks = getWeeksInMonth(currentDate, endDate);\r\n    result.push({ month, weeks });\r\n    currentDate.setMonth(currentDate.getMonth() + 1);\r\n  }\r\n  return result;\r\n}\r\n\r\nfunction getWeeksInMonth(date: Date, endDate: Date) {\r\n  const weeks = [];\r\n  const firstDay = new Date(date.getFullYear(), date.getMonth(), 1);\r\n  const lastDay = new Date(date.getFullYear(), date.getMonth() + 1, 0);\r\n  let currentWeek = 1;\r\n  for (let d = firstDay; d <= lastDay && d <= endDate; d.setDate(d.getDate() + 1)) {\r\n    if (d.getDay() === 1 || d.getDate() === 1) {\r\n      weeks.push(`W${currentWeek}`);\r\n      currentWeek++;\r\n    }\r\n  }\r\n  return weeks;\r\n}\r\n\r\nfunction getLeftPosition(startDate: Date, itemStartDate: Date, endDate: Date) {\r\n  const totalDays = (endDate.getTime() - startDate.getTime()) / (1000 * 3600 * 24);\r\n  const daysFromStart = (itemStartDate.getTime() - startDate.getTime()) / (1000 * 3600 * 24);\r\n  return (daysFromStart / totalDays) * 100;\r\n}\r\n\r\nfunction getWidth(itemStartDate: Date, itemEndDate: Date, startDate: Date, endDate: Date) {\r\n  const totalDays = (endDate.getTime() - startDate.getTime()) / (1000 * 3600 * 24);\r\n  const itemDays = (itemEndDate.getTime() - itemStartDate.getTime()) / (1000 * 3600 * 24);\r\n  return (itemDays / totalDays) * 100;\r\n}\r\n\r\nexport default GanttChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}