{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Motta\\\\cardboard\\\\src\\\\pages\\\\SettingsView.tsx\",\n  _s = $RefreshSig$();\n// src/components/SettingsView.tsx\nimport React from 'react';\nimport { Paper, Typography, FormControl, InputLabel, Select, MenuItem, TextField, Grid } from '@mui/material';\nimport { useSettings } from '../contexts/SettingsContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SettingsView = () => {\n  _s();\n  const {\n    settings,\n    updateSettings\n  } = useSettings();\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    updateSettings({\n      [name]: value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: \"Settings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"Theme\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            name: \"theme\",\n            value: settings.theme,\n            onChange: handleChange,\n            label: \"Theme\",\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"light\",\n              children: \"Light\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"dark\",\n              children: \"Dark\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Data Refresh Interval (minutes)\",\n          name: \"refreshInterval\",\n          type: \"number\",\n          value: settings.refreshInterval,\n          onChange: handleChange,\n          InputProps: {\n            inputProps: {\n              min: 1\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(SettingsView, \"6ekKG4M29J9rnJUr5SmdHwM4BZw=\", false, function () {\n  return [useSettings];\n});\n_c = SettingsView;\nexport default SettingsView;\nvar _c;\n$RefreshReg$(_c, \"SettingsView\");","map":{"version":3,"names":["React","Paper","Typography","FormControl","InputLabel","Select","MenuItem","TextField","Grid","useSettings","jsxDEV","_jsxDEV","SettingsView","_s","settings","updateSettings","handleChange","e","name","value","target","style","padding","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","item","xs","fullWidth","theme","onChange","label","type","refreshInterval","InputProps","inputProps","min","_c","$RefreshReg$"],"sources":["C:/Users/Motta/cardboard/src/pages/SettingsView.tsx"],"sourcesContent":["// src/components/SettingsView.tsx\r\nimport React from 'react';\r\nimport { \r\n  Paper, \r\n  Typography, \r\n  FormControl, \r\n  InputLabel, \r\n  Select, \r\n  MenuItem, \r\n  TextField, \r\n  Grid,\r\n  SelectChangeEvent\r\n} from '@mui/material';\r\nimport { useSettings } from '../contexts/SettingsContext';\r\n\r\nconst SettingsView: React.FC = () => {\r\n  const { settings, updateSettings } = useSettings();\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement> | SelectChangeEvent) => {\r\n    const { name, value } = e.target;\r\n    updateSettings({ [name]: value });\r\n  };\r\n\r\n  return (\r\n    <Paper style={{ padding: '20px' }}>\r\n      <Typography variant=\"h6\" gutterBottom>Settings</Typography>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <FormControl fullWidth>\r\n            <InputLabel>Theme</InputLabel>\r\n            <Select\r\n              name=\"theme\"\r\n              value={settings.theme}\r\n              onChange={handleChange}\r\n              label=\"Theme\"\r\n            >\r\n              <MenuItem value=\"light\">Light</MenuItem>\r\n              <MenuItem value=\"dark\">Dark</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Data Refresh Interval (minutes)\"\r\n            name=\"refreshInterval\"\r\n            type=\"number\"\r\n            value={settings.refreshInterval}\r\n            onChange={handleChange}\r\n            InputProps={{ inputProps: { min: 1 } }}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default SettingsView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}