{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Motta\\\\cardboard\\\\src\\\\pages\\\\DashboardView.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Typography, Box, Grid, Card, CardContent, useTheme } from '@mui/material';\nimport { useReleaseData } from '../hooks/useReleaseData';\nimport { ReleaseSelector } from '../components/dashboard/ReleaseSelector';\nimport OverallProgress from '../components/dashboard/OverallProgress';\nimport { ReleaseTimeline } from '../components/dashboard/ReleaseTimeline';\nimport { FeaturesProgress } from '../components/dashboard/FeaturesProgress';\nimport BugResolution from '../components/dashboard/BugResolution';\nimport DevelopmentProgress from '../components/dashboard/DevelopmentProgress';\nimport DateEditDialog from '../components/dashboard/DateEditDialog';\nimport { releases } from '../data/MockData';\nimport SkeletonLoader from './SkeletonLoader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DashboardView = () => {\n  _s();\n  const theme = useTheme();\n  const {\n    selectedRelease,\n    setSelectedRelease,\n    data,\n    updateDate,\n    fetchData\n  } = useReleaseData();\n  const [editingDate, setEditingDate] = useState(null);\n  const [isDateDialogOpen, setIsDateDialogOpen] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const loadData = async () => {\n      setIsLoading(true);\n      try {\n        await fetchData(selectedRelease);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    loadData();\n  }, [selectedRelease, fetchData]);\n  const handleEditDate = milestone => {\n    setEditingDate(milestone);\n    setIsDateDialogOpen(true);\n  };\n  const handleSaveDate = updatedMilestone => {\n    updateDate(updatedMilestone);\n    setIsDateDialogOpen(false);\n    setEditingDate(null);\n  };\n  const renderDashboardContent = () => /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 3,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            gutterBottom: true,\n            sx: {\n              fontWeight: 'bold',\n              color: theme.palette.primary.main\n            },\n            children: \"Release Management Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ReleaseSelector, {\n            releases: releases,\n            selectedRelease: selectedRelease,\n            onReleaseChange: e => setSelectedRelease(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      md: 6,\n      children: /*#__PURE__*/_jsxDEV(OverallProgress, {\n        progress: data.progress,\n        categories: data.categories\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      md: 6,\n      children: /*#__PURE__*/_jsxDEV(ReleaseTimeline, {\n        milestones: data.milestones,\n        onEditDate: handleEditDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(FeaturesProgress, {\n        features: data.features.map(feature => ({\n          name: feature,\n          progress: Math.random() * 100\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      md: 6,\n      children: /*#__PURE__*/_jsxDEV(BugResolution, {\n        bugs: data.bugs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      md: 6,\n      children: /*#__PURE__*/_jsxDEV(DevelopmentProgress, {\n        development: data.development\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 3,\n      backgroundColor: theme.palette.background.default\n    },\n    children: [isLoading ? /*#__PURE__*/_jsxDEV(SkeletonLoader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 20\n    }, this) : renderDashboardContent(), /*#__PURE__*/_jsxDEV(DateEditDialog, {\n      open: isDateDialogOpen,\n      onClose: () => setIsDateDialogOpen(false),\n      milestone: editingDate,\n      onSave: handleSaveDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(DashboardView, \"RBzPXh3CnJzJUPwzttNTdLwLL9A=\", false, function () {\n  return [useTheme, useReleaseData];\n});\n_c = DashboardView;\nexport default DashboardView;\nvar _c;\n$RefreshReg$(_c, \"DashboardView\");","map":{"version":3,"names":["React","useState","useEffect","Typography","Box","Grid","Card","CardContent","useTheme","useReleaseData","ReleaseSelector","OverallProgress","ReleaseTimeline","FeaturesProgress","BugResolution","DevelopmentProgress","DateEditDialog","releases","SkeletonLoader","jsxDEV","_jsxDEV","DashboardView","_s","theme","selectedRelease","setSelectedRelease","data","updateDate","fetchData","editingDate","setEditingDate","isDateDialogOpen","setIsDateDialogOpen","isLoading","setIsLoading","loadData","error","console","handleEditDate","milestone","handleSaveDate","updatedMilestone","renderDashboardContent","container","spacing","children","item","xs","variant","gutterBottom","sx","fontWeight","color","palette","primary","main","fileName","_jsxFileName","lineNumber","columnNumber","onReleaseChange","e","target","value","md","progress","categories","milestones","onEditDate","features","map","feature","name","Math","random","bugs","development","p","backgroundColor","background","default","open","onClose","onSave","_c","$RefreshReg$"],"sources":["C:/Users/Motta/cardboard/src/pages/DashboardView.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Typography, Box, Grid, Card, CardContent, useTheme } from '@mui/material';\r\nimport { useReleaseData } from '../hooks/useReleaseData';\r\nimport { ReleaseSelector } from '../components/dashboard/ReleaseSelector';\r\nimport OverallProgress from '../components/dashboard/OverallProgress';\r\nimport { ReleaseTimeline } from '../components/dashboard/ReleaseTimeline';\r\nimport { FeaturesProgress } from '../components/dashboard/FeaturesProgress';\r\nimport BugResolution from '../components/dashboard/BugResolution';\r\nimport DevelopmentProgress from '../components/dashboard/DevelopmentProgress';\r\nimport DateEditDialog from '../components/dashboard/DateEditDialog';\r\nimport { releases } from '../data/MockData';\r\nimport SkeletonLoader from './SkeletonLoader';\r\nimport { Milestone } from '../types';\r\n\r\nexport const DashboardView: React.FC = () => {\r\n  const theme = useTheme();\r\n  const { selectedRelease, setSelectedRelease, data, updateDate, fetchData } = useReleaseData();\r\n  const [editingDate, setEditingDate] = useState<Milestone | null>(null);\r\n  const [isDateDialogOpen, setIsDateDialogOpen] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const loadData = async () => {\r\n      setIsLoading(true);\r\n      try {\r\n        await fetchData(selectedRelease);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    loadData();\r\n  }, [selectedRelease, fetchData]);\r\n\r\n  const handleEditDate = (milestone: Milestone) => {\r\n    setEditingDate(milestone);\r\n    setIsDateDialogOpen(true);\r\n  };\r\n\r\n  const handleSaveDate = (updatedMilestone: Milestone) => {\r\n    updateDate(updatedMilestone);\r\n    setIsDateDialogOpen(false);\r\n    setEditingDate(null);\r\n  };\r\n\r\n  const renderDashboardContent = () => (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12}>\r\n        <Card>\r\n          <CardContent>\r\n            <Typography variant=\"h4\" gutterBottom sx={{ fontWeight: 'bold', color: theme.palette.primary.main }}>\r\n              Release Management Dashboard\r\n            </Typography>\r\n            <ReleaseSelector\r\n              releases={releases}\r\n              selectedRelease={selectedRelease}\r\n              onReleaseChange={(e) => setSelectedRelease(e.target.value)}\r\n            />\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n\r\n      <Grid item xs={12} md={6}>\r\n        <OverallProgress progress={data.progress} categories={data.categories} />\r\n      </Grid>\r\n\r\n      <Grid item xs={12} md={6}>\r\n        <ReleaseTimeline milestones={data.milestones} onEditDate={handleEditDate} />\r\n      </Grid>\r\n\r\n      <Grid item xs={12}>\r\n        <FeaturesProgress features={data.features.map(feature => ({ name: feature, progress: Math.random() * 100 }))} />\r\n      </Grid>\r\n\r\n      <Grid item xs={12} md={6}>\r\n        <BugResolution bugs={data.bugs} />\r\n      </Grid>\r\n\r\n      <Grid item xs={12} md={6}>\r\n        <DevelopmentProgress development={data.development} />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n\r\n  return (\r\n    <Box sx={{ p: 3, backgroundColor: theme.palette.background.default }}>\r\n      {isLoading ? <SkeletonLoader /> : renderDashboardContent()}\r\n\r\n      <DateEditDialog\r\n        open={isDateDialogOpen}\r\n        onClose={() => setIsDateDialogOpen(false)}\r\n        milestone={editingDate}\r\n        onSave={handleSaveDate}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default DashboardView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}