{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Motta\\\\cardboard\\\\src\\\\contexts\\\\SettingsContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/contexts/SettingsContext.tsx\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SettingsContext = /*#__PURE__*/createContext(undefined);\nexport const SettingsProvider = ({\n  children\n}) => {\n  _s();\n  const [settings, setSettings] = useState({\n    theme: 'light',\n    refreshInterval: 5\n  });\n  useEffect(() => {\n    const savedSettings = localStorage.getItem('appSettings');\n    if (savedSettings) {\n      setSettings(JSON.parse(savedSettings));\n    }\n  }, []);\n  const updateSettings = newSettings => {\n    const updatedSettings = {\n      ...settings,\n      ...newSettings\n    };\n    setSettings(updatedSettings);\n    localStorage.setItem('appSettings', JSON.stringify(updatedSettings));\n  };\n  return /*#__PURE__*/_jsxDEV(SettingsContext.Provider, {\n    value: {\n      settings,\n      updateSettings\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(SettingsProvider, \"NAZK6vtDrRhWPG8JZtkCb6PI3M8=\");\n_c = SettingsProvider;\nexport const useSettings = () => {\n  _s2();\n  const context = useContext(SettingsContext);\n  if (context === undefined) {\n    throw new Error('useSettings must be used within a SettingsProvider');\n  }\n  return context;\n};\n_s2(useSettings, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"SettingsProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsxDEV","_jsxDEV","SettingsContext","undefined","SettingsProvider","children","_s","settings","setSettings","theme","refreshInterval","savedSettings","localStorage","getItem","JSON","parse","updateSettings","newSettings","updatedSettings","setItem","stringify","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useSettings","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/Motta/cardboard/src/contexts/SettingsContext.tsx"],"sourcesContent":["// src/contexts/SettingsContext.tsx\r\nimport React, { createContext, useState, useContext, useEffect } from 'react';\r\n\r\ninterface Settings {\r\n  theme: 'light' | 'dark';\r\n  refreshInterval: number;\r\n}\r\n\r\ninterface SettingsContextType {\r\n  settings: Settings;\r\n  updateSettings: (newSettings: Partial<Settings>) => void;\r\n}\r\n\r\nconst SettingsContext = createContext<SettingsContextType | undefined>(undefined);\r\n\r\nexport const SettingsProvider: React.FC<React.PropsWithChildren<{}>> = ({ children }) => {\r\n  const [settings, setSettings] = useState<Settings>({\r\n    theme: 'light',\r\n    refreshInterval: 5,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const savedSettings = localStorage.getItem('appSettings');\r\n    if (savedSettings) {\r\n      setSettings(JSON.parse(savedSettings));\r\n    }\r\n  }, []);\r\n\r\n  const updateSettings = (newSettings: Partial<Settings>) => {\r\n    const updatedSettings = { ...settings, ...newSettings };\r\n    setSettings(updatedSettings);\r\n    localStorage.setItem('appSettings', JSON.stringify(updatedSettings));\r\n  };\r\n\r\n  return (\r\n    <SettingsContext.Provider value={{ settings, updateSettings }}>\r\n      {children}\r\n    </SettingsContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useSettings = () => {\r\n  const context = useContext(SettingsContext);\r\n  if (context === undefined) {\r\n    throw new Error('useSettings must be used within a SettingsProvider');\r\n  }\r\n  return context;\r\n};"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAY9E,MAAMC,eAAe,gBAAGN,aAAa,CAAkCO,SAAS,CAAC;AAEjF,OAAO,MAAMC,gBAAuD,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACvF,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAW;IACjDY,KAAK,EAAE,OAAO;IACdC,eAAe,EAAE;EACnB,CAAC,CAAC;EAEFX,SAAS,CAAC,MAAM;IACd,MAAMY,aAAa,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;IACzD,IAAIF,aAAa,EAAE;MACjBH,WAAW,CAACM,IAAI,CAACC,KAAK,CAACJ,aAAa,CAAC,CAAC;IACxC;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,cAAc,GAAIC,WAA8B,IAAK;IACzD,MAAMC,eAAe,GAAG;MAAE,GAAGX,QAAQ;MAAE,GAAGU;IAAY,CAAC;IACvDT,WAAW,CAACU,eAAe,CAAC;IAC5BN,YAAY,CAACO,OAAO,CAAC,aAAa,EAAEL,IAAI,CAACM,SAAS,CAACF,eAAe,CAAC,CAAC;EACtE,CAAC;EAED,oBACEjB,OAAA,CAACC,eAAe,CAACmB,QAAQ;IAACC,KAAK,EAAE;MAAEf,QAAQ;MAAES;IAAe,CAAE;IAAAX,QAAA,EAC3DA;EAAQ;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACe,CAAC;AAE/B,CAAC;AAACpB,EAAA,CAxBWF,gBAAuD;AAAAuB,EAAA,GAAvDvB,gBAAuD;AA0BpE,OAAO,MAAMwB,WAAW,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC/B,MAAMC,OAAO,GAAGhC,UAAU,CAACI,eAAe,CAAC;EAC3C,IAAI4B,OAAO,KAAK3B,SAAS,EAAE;IACzB,MAAM,IAAI4B,KAAK,CAAC,oDAAoD,CAAC;EACvE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,WAAW;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}