{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Motta\\\\cardboard\\\\src\\\\components\\\\datamanagement\\\\TaskManagement.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { TextField, Button, Typography, Grid, Snackbar, Paper, LinearProgress, Box } from '@mui/material';\nimport MuiAlert from '@mui/material/Alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst predefinedCategories = ['Business Analysis', 'Development', 'Testing'];\nconst TaskManagement = ({\n  onComplete,\n  onBack,\n  onDataUpdate,\n  existingData\n}) => {\n  _s();\n  const [tasks, setTasks] = useState({});\n  const [newCategory, setNewCategory] = useState('');\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState('');\n  const [snackbarSeverity, setSnackbarSeverity] = useState('success');\n  useEffect(() => {\n    if (existingData && Object.keys(existingData).length > 0) {\n      setTasks(existingData);\n    } else {\n      const initialTasks = predefinedCategories.reduce((acc, category) => {\n        acc[category] = {\n          total: 0,\n          completed: 0,\n          startDate: '',\n          endDate: '',\n          workingDays: 0\n        };\n        return acc;\n      }, {});\n      setTasks(initialTasks);\n    }\n  }, [existingData]);\n  const calculateWorkingDays = useCallback((start, end) => {\n    if (!start || !end) return 0;\n    const startDate = new Date(start);\n    const endDate = new Date(end);\n    let count = 0;\n    const curDate = new Date(startDate.getTime());\n    while (curDate <= endDate) {\n      const dayOfWeek = curDate.getDay();\n      if (dayOfWeek !== 0 && dayOfWeek !== 6) count++;\n      curDate.setDate(curDate.getDate() + 1);\n    }\n    return count;\n  }, []);\n  const handleAddCategory = useCallback(() => {\n    if (newCategory && !(newCategory in tasks)) {\n      setTasks(prevTasks => {\n        const updatedTasks = {\n          ...prevTasks,\n          [newCategory]: {\n            total: 0,\n            completed: 0,\n            startDate: '',\n            endDate: '',\n            workingDays: 0\n          }\n        };\n        onDataUpdate({\n          tasks: updatedTasks\n        });\n        return updatedTasks;\n      });\n      setNewCategory('');\n      setSnackbarMessage('New category added successfully!');\n      setSnackbarSeverity('success');\n      setSnackbarOpen(true);\n    }\n  }, [newCategory, tasks, onDataUpdate]);\n  const handleInputChange = useCallback((category, field, value) => {\n    setTasks(prevTasks => {\n      const updatedTask = {\n        ...prevTasks[category],\n        [field]: value\n      };\n      if (field === 'startDate' || field === 'endDate') {\n        if (updatedTask.startDate && updatedTask.endDate) {\n          if (new Date(updatedTask.endDate) < new Date(updatedTask.startDate)) {\n            setSnackbarMessage('End date cannot be before start date');\n            setSnackbarSeverity('error');\n            setSnackbarOpen(true);\n            return prevTasks;\n          }\n          updatedTask.workingDays = calculateWorkingDays(updatedTask.startDate, updatedTask.endDate);\n        }\n      }\n      const updatedTasks = {\n        ...prevTasks,\n        [category]: updatedTask\n      };\n      onDataUpdate({\n        tasks: updatedTasks\n      });\n      return updatedTasks;\n    });\n  }, [calculateWorkingDays, onDataUpdate]);\n  const calculateProgress = useCallback(category => {\n    const taskData = tasks[category];\n    if (!taskData || typeof taskData.total !== 'number' || typeof taskData.completed !== 'number') {\n      return 0;\n    }\n    const {\n      total,\n      completed\n    } = taskData;\n    return total > 0 ? completed / total * 100 : 0;\n  }, [tasks]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    onComplete();\n  };\n  const handleCloseSnackbar = () => {\n    setSnackbarOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        marginBottom: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        children: \"Task Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"New Category\",\n            value: newCategory,\n            onChange: e => setNewCategory(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: handleAddCategory,\n            children: \"Add Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), Object.entries(tasks).map(([category, taskData]) => /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        padding: 2,\n        marginBottom: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: category\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            type: \"number\",\n            label: \"Total Tasks\",\n            value: taskData.total,\n            onChange: e => handleInputChange(category, 'total', parseInt(e.target.value, 10))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            type: \"number\",\n            label: \"Completed Tasks\",\n            value: taskData.completed,\n            onChange: e => handleInputChange(category, 'completed', parseInt(e.target.value, 10))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            type: \"date\",\n            label: \"Start Date\",\n            value: taskData.startDate,\n            onChange: e => handleInputChange(category, 'startDate', e.target.value),\n            InputLabelProps: {\n              shrink: true\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            type: \"date\",\n            label: \"End Date\",\n            value: taskData.endDate,\n            onChange: e => handleInputChange(category, 'endDate', e.target.value),\n            InputLabelProps: {\n              shrink: true\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          marginTop: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          gutterBottom: true,\n          children: [\"Working Days: \", taskData.workingDays]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(LinearProgress, {\n          variant: \"determinate\",\n          value: calculateProgress(category)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this)]\n    }, category, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        marginTop: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: onBack,\n        sx: {\n          marginRight: 1\n        },\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"primary\",\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: snackbarOpen,\n      autoHideDuration: 6000,\n      onClose: handleCloseSnackbar,\n      children: /*#__PURE__*/_jsxDEV(MuiAlert, {\n        onClose: handleCloseSnackbar,\n        severity: snackbarSeverity,\n        sx: {\n          width: '100%'\n        },\n        children: snackbarMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskManagement, \"Dz4gipLGBj+UMvz8yax9eMIJwxg=\");\n_c = TaskManagement;\nexport default TaskManagement;\nvar _c;\n$RefreshReg$(_c, \"TaskManagement\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","TextField","Button","Typography","Grid","Snackbar","Paper","LinearProgress","Box","MuiAlert","jsxDEV","_jsxDEV","predefinedCategories","TaskManagement","onComplete","onBack","onDataUpdate","existingData","_s","tasks","setTasks","newCategory","setNewCategory","snackbarOpen","setSnackbarOpen","snackbarMessage","setSnackbarMessage","snackbarSeverity","setSnackbarSeverity","Object","keys","length","initialTasks","reduce","acc","category","total","completed","startDate","endDate","workingDays","calculateWorkingDays","start","end","Date","count","curDate","getTime","dayOfWeek","getDay","setDate","getDate","handleAddCategory","prevTasks","updatedTasks","handleInputChange","field","value","updatedTask","calculateProgress","taskData","handleSubmit","e","preventDefault","handleCloseSnackbar","onSubmit","children","sx","marginBottom","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","alignItems","item","xs","sm","fullWidth","label","onChange","target","onClick","entries","map","elevation","padding","type","parseInt","InputLabelProps","shrink","marginTop","marginRight","color","open","autoHideDuration","onClose","severity","width","_c","$RefreshReg$"],"sources":["C:/Users/Motta/cardboard/src/components/datamanagement/TaskManagement.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport {\r\n  TextField, Button, Typography, Grid, Snackbar,\r\n  Paper, LinearProgress, Box\r\n} from '@mui/material';\r\nimport MuiAlert from '@mui/material/Alert';\r\nimport { ReleaseData, TaskData } from '../../pages/DataManagementView';\r\n\r\ninterface TaskManagementProps {\r\n  onComplete: () => void;\r\n  onBack: () => void;\r\n  onDataUpdate: (data: Partial<ReleaseData>) => void;\r\n  existingData?: Record<string, TaskData>;\r\n}\r\n\r\nconst predefinedCategories = ['Business Analysis', 'Development', 'Testing'];\r\n\r\nconst TaskManagement: React.FC<TaskManagementProps> = ({ onComplete, onBack, onDataUpdate, existingData }) => {\r\n  const [tasks, setTasks] = useState<Record<string, TaskData>>({});\r\n  const [newCategory, setNewCategory] = useState('');\r\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\r\n  const [snackbarMessage, setSnackbarMessage] = useState('');\r\n  const [snackbarSeverity, setSnackbarSeverity] = useState<'success' | 'error'>('success');\r\n\r\n  useEffect(() => {\r\n    if (existingData && Object.keys(existingData).length > 0) {\r\n      setTasks(existingData);\r\n    } else {\r\n      const initialTasks = predefinedCategories.reduce((acc, category) => {\r\n        acc[category] = { total: 0, completed: 0, startDate: '', endDate: '', workingDays: 0 };\r\n        return acc;\r\n      }, {} as Record<string, TaskData>);\r\n      setTasks(initialTasks);\r\n    }\r\n  }, [existingData]);\r\n\r\n  const calculateWorkingDays = useCallback((start: string, end: string): number => {\r\n    if (!start || !end) return 0;\r\n    const startDate = new Date(start);\r\n    const endDate = new Date(end);\r\n    let count = 0;\r\n    const curDate = new Date(startDate.getTime());\r\n    while (curDate <= endDate) {\r\n      const dayOfWeek = curDate.getDay();\r\n      if (dayOfWeek !== 0 && dayOfWeek !== 6) count++;\r\n      curDate.setDate(curDate.getDate() + 1);\r\n    }\r\n    return count;\r\n  }, []);\r\n\r\n  const handleAddCategory = useCallback(() => {\r\n    if (newCategory && !(newCategory in tasks)) {\r\n      setTasks(prevTasks => {\r\n        const updatedTasks = {\r\n          ...prevTasks,\r\n          [newCategory]: { total: 0, completed: 0, startDate: '', endDate: '', workingDays: 0 }\r\n        };\r\n        onDataUpdate({ tasks: updatedTasks });\r\n        return updatedTasks;\r\n      });\r\n      setNewCategory('');\r\n      setSnackbarMessage('New category added successfully!');\r\n      setSnackbarSeverity('success');\r\n      setSnackbarOpen(true);\r\n    }\r\n  }, [newCategory, tasks, onDataUpdate]);\r\n\r\n  const handleInputChange = useCallback((category: string, field: keyof TaskData, value: any) => {\r\n    setTasks(prevTasks => {\r\n      const updatedTask = { ...prevTasks[category], [field]: value };\r\n      if (field === 'startDate' || field === 'endDate') {\r\n        if (updatedTask.startDate && updatedTask.endDate) {\r\n          if (new Date(updatedTask.endDate) < new Date(updatedTask.startDate)) {\r\n            setSnackbarMessage('End date cannot be before start date');\r\n            setSnackbarSeverity('error');\r\n            setSnackbarOpen(true);\r\n            return prevTasks;\r\n          }\r\n          updatedTask.workingDays = calculateWorkingDays(updatedTask.startDate, updatedTask.endDate);\r\n        }\r\n      }\r\n      const updatedTasks = { ...prevTasks, [category]: updatedTask };\r\n      onDataUpdate({ tasks: updatedTasks });\r\n      return updatedTasks;\r\n    });\r\n  }, [calculateWorkingDays, onDataUpdate]);\r\n\r\n  const calculateProgress = useCallback((category: string): number => {\r\n    const taskData = tasks[category];\r\n    if (!taskData || typeof taskData.total !== 'number' || typeof taskData.completed !== 'number') {\r\n      return 0;\r\n    }\r\n    const { total, completed } = taskData;\r\n    return total > 0 ? (completed / total) * 100 : 0;\r\n  }, [tasks]);\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    onComplete();\r\n  };\r\n\r\n  const handleCloseSnackbar = () => {\r\n    setSnackbarOpen(false);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <Box sx={{ marginBottom: 2 }}>\r\n        <Typography variant=\"h5\" gutterBottom>\r\n          Task Management\r\n        </Typography>\r\n        <Grid container spacing={2} alignItems=\"center\">\r\n          <Grid item xs={12} sm={6}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"New Category\"\r\n              value={newCategory}\r\n              onChange={(e) => setNewCategory(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <Button variant=\"contained\" onClick={handleAddCategory}>\r\n              Add Category\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n\r\n      {Object.entries(tasks).map(([category, taskData]) => (\r\n        <Paper key={category} elevation={3} sx={{ padding: 2, marginBottom: 2 }}>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            {category}\r\n          </Typography>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                fullWidth\r\n                type=\"number\"\r\n                label=\"Total Tasks\"\r\n                value={taskData.total}\r\n                onChange={(e) => handleInputChange(category, 'total', parseInt(e.target.value, 10))}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                fullWidth\r\n                type=\"number\"\r\n                label=\"Completed Tasks\"\r\n                value={taskData.completed}\r\n                onChange={(e) => handleInputChange(category, 'completed', parseInt(e.target.value, 10))}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                fullWidth\r\n                type=\"date\"\r\n                label=\"Start Date\"\r\n                value={taskData.startDate}\r\n                onChange={(e) => handleInputChange(category, 'startDate', e.target.value)}\r\n                InputLabelProps={{ shrink: true }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                fullWidth\r\n                type=\"date\"\r\n                label=\"End Date\"\r\n                value={taskData.endDate}\r\n                onChange={(e) => handleInputChange(category, 'endDate', e.target.value)}\r\n                InputLabelProps={{ shrink: true }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Box sx={{ marginTop: 2 }}>\r\n            <Typography variant=\"body2\" gutterBottom>\r\n              Working Days: {taskData.workingDays}\r\n            </Typography>\r\n            <LinearProgress variant=\"determinate\" value={calculateProgress(category)} />\r\n          </Box>\r\n        </Paper>\r\n      ))}\r\n\r\n      <Box sx={{ marginTop: 2 }}>\r\n        <Button onClick={onBack} sx={{ marginRight: 1 }}>\r\n          Back\r\n        </Button>\r\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n          Next\r\n        </Button>\r\n      </Box>\r\n\r\n      <Snackbar open={snackbarOpen} autoHideDuration={6000} onClose={handleCloseSnackbar}>\r\n        <MuiAlert onClose={handleCloseSnackbar} severity={snackbarSeverity} sx={{ width: '100%' }}>\r\n          {snackbarMessage}\r\n        </MuiAlert>\r\n      </Snackbar>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TaskManagement;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}