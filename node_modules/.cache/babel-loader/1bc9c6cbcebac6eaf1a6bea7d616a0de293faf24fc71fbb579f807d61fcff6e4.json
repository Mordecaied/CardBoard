{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  progress: {\n    businessAnalysis: 0,\n    development: 0,\n    testing: 0\n  },\n  teams: [],\n  timeline: []\n};\nconst releaseSlice = createSlice({\n  name: 'release',\n  initialState,\n  reducers: {\n    updateProgress: (state, action) => {\n      state.progress = action.payload;\n    },\n    setTeams: (state, action) => {\n      state.teams = action.payload;\n    },\n    setTimeline: (state, action) => {\n      state.timeline = action.payload;\n    }\n  }\n});\nexport const {\n  updateProgress,\n  setTeams,\n  setTimeline\n} = releaseSlice.actions;\nexport default releaseSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","progress","businessAnalysis","development","testing","teams","timeline","releaseSlice","name","reducers","updateProgress","state","action","payload","setTeams","setTimeline","actions","reducer"],"sources":["C:/Users/Motta/cardboard/src/store/releaseSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\ninterface ReleaseState {\r\n  progress: {\r\n    businessAnalysis: number;\r\n    development: number;\r\n    testing: number;\r\n  };\r\n  teams: {\r\n    id: number;\r\n    name: string;\r\n    members: { id: number; name: string; role: string }[];\r\n  }[];\r\n  timeline: {\r\n    id: number;\r\n    task: string;\r\n    start: string;\r\n    end: string;\r\n    category: string;\r\n  }[];\r\n}\r\n\r\nconst initialState: ReleaseState = {\r\n  progress: {\r\n    businessAnalysis: 0,\r\n    development: 0,\r\n    testing: 0,\r\n  },\r\n  teams: [],\r\n  timeline: [],\r\n};\r\n\r\nconst releaseSlice = createSlice({\r\n    name: 'release',\r\n    initialState,\r\n    reducers: {\r\n    updateProgress: (state, action: PayloadAction<ReleaseState['progress']>) => {\r\n      state.progress = action.payload;\r\n    },\r\n    setTeams: (state, action: PayloadAction<ReleaseState['teams']>) => {\r\n        state.teams = action.payload;\r\n    },\r\n    setTimeline: (state, action: PayloadAction<ReleaseState['timeline']>) => {\r\n      state.timeline = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { updateProgress, setTeams, setTimeline } = releaseSlice.actions;\r\nexport default releaseSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAsB7D,MAAMC,YAA0B,GAAG;EACjCC,QAAQ,EAAE;IACRC,gBAAgB,EAAE,CAAC;IACnBC,WAAW,EAAE,CAAC;IACdC,OAAO,EAAE;EACX,CAAC;EACDC,KAAK,EAAE,EAAE;EACTC,QAAQ,EAAE;AACZ,CAAC;AAED,MAAMC,YAAY,GAAGR,WAAW,CAAC;EAC7BS,IAAI,EAAE,SAAS;EACfR,YAAY;EACZS,QAAQ,EAAE;IACVC,cAAc,EAAEA,CAACC,KAAK,EAAEC,MAA+C,KAAK;MAC1ED,KAAK,CAACV,QAAQ,GAAGW,MAAM,CAACC,OAAO;IACjC,CAAC;IACDC,QAAQ,EAAEA,CAACH,KAAK,EAAEC,MAA4C,KAAK;MAC/DD,KAAK,CAACN,KAAK,GAAGO,MAAM,CAACC,OAAO;IAChC,CAAC;IACDE,WAAW,EAAEA,CAACJ,KAAK,EAAEC,MAA+C,KAAK;MACvED,KAAK,CAACL,QAAQ,GAAGM,MAAM,CAACC,OAAO;IACjC;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEH,cAAc;EAAEI,QAAQ;EAAEC;AAAY,CAAC,GAAGR,YAAY,CAACS,OAAO;AAC7E,eAAeT,YAAY,CAACU,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}